"""
1. Реализовать вывод информации о промежутке времени в зависимости от его продолжительности
duration в секундах: до минуты: <s> сек; до часа: <m> мин <s> сек; до суток: <h> час <m> мин <s> сек;
* в остальных случаях: <d> дн <h> час <m> мин <s> сек.

Примеры:
duration = 53
53 сек
duration = 153
2 мин 33 сек
duration = 4153
1 час 9 мин 13 сек
duration = 400153
4 дн 15 час 9 мин 13 сек

Примечание: можете проверить себя здесь, подумайте, можно ли использовать цикл для проверки работы
кода сразу для нескольких значений продолжительности, будет ли тут полезен список?
Вопрос: есть ли смысл проверять условия, чтоб программа меньше выполняла код?
"""

duration = input('Введите длительность в секундах: ')
duration = int(duration)
seconds = duration
print('Длительность в секундах: ', duration)
minutes = 0
hours = 0
days = 0

if duration > 60:                # если секунд больше 60, то считаем минуты
    seconds = duration % 60      # секунды
    duration = duration // 60    # минут всего

    if duration > 60:            # если минут больше 60, то считаем часы
        minutes = duration % 60      # минуты
        duration = duration // 60    # часов всего

        if duration > 24:            # если часов большу 24, то считаем дни
            hours = duration % 24    # часов
            days = duration // 24    # дней

print(days, 'дн', hours, 'час', minutes, 'мин', seconds, 'сек')

"""
2. Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7. Например,
число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
Внимание: использовать только арифметические операции!
К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
сумма цифр которых делится нацело на 7.
* Решить задачу под пунктом b, не создавая новый список.
"""

my_list = []
idx = 1

while idx < 1000:
   if idx % 2 != 0:
       my_list.append(idx**3)
   idx += 1
print(my_list)       # Список, состоящий из кубов нечётных чисел от 1 до 1000

sum_all_numbers = 0
for idx in my_list:
    numb = idx
    sum_numb = 0
    while numb > 0:
        sum_numb += (numb % 10)
        numb = numb // 10
    if (sum_numb % 7) == 0:
        sum_all_numbers += idx
print('Сумма чисел из списка, сумма цифр которых делится нацело на 7: ', sum_all_numbers)

#--------------------------------------------------------------______

idx = 0
while idx < len(my_list):
   my_list[idx] += 17
   idx += 1
print(my_list)             # Измененный список

sum_all_numbers = 0
for idx in my_list:
    numb = idx
    sum_numb = 0
    while numb > 0:
        sum_numb += (numb % 10)
        numb = numb // 10
    if (sum_numb % 7) == 0:
        sum_all_numbers += idx
print('Сумма чисел из списка, сумма цифр которых делится нацело на 7: ', sum_all_numbers)

"""
3.Склонение слова
Реализовать склонение слова «процент» во фразе «N процентов». Вывести эту фразу на экран отдельной
строкой для каждого из чисел в интервале от 1 до 100:
1 процент
2 процента
3 процента
4 процента
5 процентов
6 процентов
...
100 процентов
"""

list1 = []
idx = 0
while idx < 100:
   list1.append(idx)
   idx += 1

list2 = ['процент', 'процентов', 'процента']
idx = 0
while idx < len(list1):
   if (list1[idx] % 10 == 0) or (list1[idx] % 10 == 5) or (list1[idx] % 10 == 6) or (list1[idx] % 10 == 7) or \
           (list1[idx] % 10 == 8) or (list1[idx] % 10 == 9) or (11 <= list1[idx] <= 19):
      print(list1[idx], list2[1])
   elif (list1[idx] % 10 == 2) or (list1[idx] % 10 == 3) or (list1[idx] % 10 == 4):
      print(list1[idx], list2[2])
   else:
      print(list1[idx], list2[0])
   idx += 1
